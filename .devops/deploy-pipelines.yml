trigger:
- master

parameters:
  - name: environment
    displayName: Target Environment
    type: string
    default: prod
    values:
      #- dev
      - prod

# variables set on azdevops to avoid circular dependency warning
# $(DEFAULT_BRANCH)
# $(MY_INDEX)
# $(BLOB_CONTAINER_NAME)
variables:
  AZURE_SUBSCRIPTION: $(PROD_AZURE_SUBSCRIPTION)
  STORAGE_ACCOUNT_NAME: $(PROD_STORAGE_ACCOUNT_NAME)
  PROFILE_CDN_NAME: $(PROD_PROFILE_CDN_NAME)
  ENDPOINT_NAME: $(PROD_ENDPOINT_NAME)
  RESOURCE_GROUP_NAME: $(PROD_RESOURCE_GROUP_NAME)
  JEKYLL_ENV: production
  PIPELINE_TYPE: $(Build.Reason)

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseRubyVersion@0
  inputs:
    versionSpec: '>= 2.6.4'

- script: |
    gem install jekyll bundler
    bundle install --retry=3 --jobs=4
  displayName: 'Bundle install'

- script: |
    bundle install
    JEKYLL_ENV=production bundle exec jekyll build --config _config.yml,_config_production.yml
  displayName: 'Build by Jekyll'

- script: |
    find . -type f | wc -l 
    ls -la $(Build.SourcesDirectory)/_site
    echo BLOB_CONTAINER_NAME: $(BLOB_CONTAINER_NAME) 
  displayName: 'Check Site'

# SYNC STORAGE AT EVERY SCHEDULE, with Enti&Servizi (PIPELINE_TYPE==Schedule)
- task: AzureCLI@1
  displayName: 'Sync Storage ALL'
  inputs:
    azureSubscription: '$(AZURE_SUBSCRIPTION)'
    scriptLocation: inlineScript
    inlineScript: |
      az account set -s "DEV-IO"
      az storage blob sync --container $(BLOB_CONTAINER_NAME) --account-name "test5k" -s "$(Build.SourcesDirectory)/_site"
     
